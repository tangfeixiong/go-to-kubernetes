<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

	<groupId>https0x3A0x2F0x2Fgithub0x2Ecom0x2Ftangfeixiong0x2Fgo-to-kubernetes</groupId>
	<artifactId>web-console</artifactId>
	<version>0.0.1-alpha</version>
	<packaging>jar</packaging>

    <parent>
        <artifactId>console-k8s</artifactId>
        <groupId>https0x3A0x2F0x2Fgithub0x2Ecom0x2Ftangfeixiong0x2Fgo-to-kubernetes</groupId>
        <version>0.0.1-alpha</version>
		<relativePath>../</relativePath>
		<!--<relativePath/>--> <!-- lookup parent from repository -->
    </parent>

    <name>Go to Kubernetes :: Console Project :: Web Console</name>
    <description>Manage Kubernetes resources including Custom Resource Definitions.</description>

    <properties>
        <hibernate-validator.version>5.2.4.Final</hibernate-validator.version>
		<fabric8.maven.plugin.version>3.5.37</fabric8.maven.plugin.version>
        <docker-registry>docker.io/tangfeixiong</docker-registry>
        <image-repository>${project.artifactId}</image-repository>
        <image-tag>${project.version}</image-tag>
<!--        <image-tag>latest</image-tag>-->
		<oracle-java-url>http://download.oracle.com/otn-pub/java/jdk/8u151-b12/e758a0de34e24606bca991d704f6dcbf/jdk-8u151-linux-x64.tar.gz</oracle-java-url>
    </properties>

    <dependencies>
		<!-- Compile -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
			<exclusions>
				<!-- Excluded because we will be using netty -->
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<!-- Test -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/io.projectreactor/reactor-core -->
		<dependency>
		    <groupId>io.projectreactor</groupId>
		    <artifactId>reactor-core</artifactId>
		    <version>3.1.5.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>io.projectreactor</groupId>
			<artifactId>reactor-test</artifactId>
		    <version>3.1.5.RELEASE</version>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/io.projectreactor.ipc/reactor-netty -->
<!--		<dependency>
			<groupId>io.projectreactor.ipc</groupId>
			<artifactId>reactor-netty</artifactId>
			<version>0.7.5.RELEASE</version>
		</dependency>-->
		<!-- https://mvnrepository.com/artifact/io.projectreactor.ipc/reactor-ipc -->
<!--		<dependency>
		    <groupId>io.projectreactor.ipc</groupId>
		    <artifactId>reactor-ipc</artifactId>
		    <version>0.6.2.RELEASE</version>
		</dependency>		-->

		<!-- https://mvnrepository.com/artifact/io.reactivex/rxjava -->
		<dependency>
		    <groupId>io.reactivex</groupId>
		    <artifactId>rxjava</artifactId>
		    <version>1.3.6</version>
		</dependency>
		<dependency>
		    <groupId>io.reactivex.rxjava2</groupId>
		    <artifactId>rxjava</artifactId>
		    <version>2.1.10</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>

		<dependency>
			<groupId>org.freemarker</groupId>
			<artifactId>freemarker</artifactId>
		</dependency>

		<!-- Needed only for the FreemarkerConfigurer -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
		</dependency>

		<dependency>
			<groupId>org.xerial</groupId>
			<artifactId>sqlite-jdbc</artifactId>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>

<!--        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jetty</artifactId>
        </dependency>-->
		
<!--		<dependency>
		    <groupId>org.springframework.cloud</groupId>
		    <artifactId>spring-cloud-starter-kubernetes</artifactId>
		    <version>${spring-cloud-kubernetes.version}</version>
		</dependency>-->

        <dependency>
		    <groupId>org.springframework.data</groupId>
			<artifactId>spring-data-commons</artifactId>
			<version>2.0.0.RELEASE</version>
	    </dependency>
        <dependency>
		    <groupId>org.springframework.data</groupId>
			<artifactId>spring-data-mongodb</artifactId>
			<version>2.0.0.RELEASE</version>
	    </dependency>
		
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>${hibernate-validator.version}</version>
        </dependency>

		<dependency>
		    <groupId>io.kubernetes</groupId>
		    <artifactId>client-java</artifactId>
		    <version>11.0.1</version>
		    <scope>compile</scope>
		</dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot.version}</version>
		        <configuration>
		            <mainClass>${start-class}</mainClass>
					<layout>JAR</layout>
		        </configuration>
                <executions>
					<execution>
						<id>generate build info</id>
						<goals>
							<goal>build-info</goal>
						</goals>
					</execution>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <!--skip deploy -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>${maven-deploy-plugin.version}</version>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>

            <!-- https://github.com/fabric8io/docker-maven-plugin -->
			<plugin>
             <groupId>io.fabric8</groupId>
             <artifactId>docker-maven-plugin</artifactId>
             <version>0.24.0</version>
             <extensions>true</extensions>
			 <configuration>
			   <images>
			     <image>
			       <name>${docker-registry}/${image-repository}:${image-tag}</name>
			       <build>
			         <assembly>
<!--                       <descriptorRef>artifact-with-dependencies</descriptorRef>-->
					    <descriptorRef>artifact</descriptorRef>
                     </assembly>
<!--			         <dockerFileDir>${project.basedir}/src/main/docker/io-dot-fabric8</dockerFileDir>-->
				     <dockerFileDir>io-dot-fabric8</dockerFileDir>
<!--					 <dockerFile>Dockerfile.oracle-server-jre1.8</dockerFile>-->
				     <args>
				         <jarTgt>${project.build.finalName}.jar</jarTgt>
				         <javaUri>${oracle-java-url}</javaUri>
					 </args>
					 <nocache>true</nocache>
			       </build>
			     </image>
			   </images>
			 </configuration>
			 <executions>
			   <execution>
			     <id>docker-build</id>
			     <goals>
			       <goal>build</goal>
			     </goals>
			   </execution>
			 </executions>
			</plugin>

           <!-- https://github.com/spotify/dockerfile-maven -->			
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>dockerfile-maven-plugin</artifactId>
				<version>1.3.7</version>
				<executions>
				    <execution>
				      <id>default</id>
				      <goals>
				        <goal>build</goal>
				        <goal>push</goal>
				      </goals>
				    </execution>
				</executions>
				<configuration>
				    <contextDirectory>${project.basedir}/src/main/docker/com-dot-spotify</contextDirectory>
				    <repository>${docker-registry}/${image-repository}</repository>
<!--				    <tag>${project.version}</tag>-->
                   <skip>true</skip>
                   <build.noCache>true</build.noCache>
				    <buildArgs>
				      <jarTgt>${project.build.finalName}.jar</jarTgt>
				    </buildArgs>
				</configuration>
			</plugin>

<!--            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>fabric8-maven-plugin</artifactId>
                <version>${fabric8.maven.plugin.version}</version>
                <executions>
                    <execution>
                        <id>fmp</id>
                        <goals>
                            <goal>resource</goal>
                        </goals>
                    </execution>
                </executions>
				<configuration>
					<enricher>
						<config>
							<fmp-controller>
								<name>spring-cloud-reload</name>
							</fmp-controller>
							<fmp-service>
								<name>spring-cloud-reload</name>
							</fmp-service>
						</config>
					</enricher>
				</configuration>
            </plugin>-->
        </plugins>
    </build>

	<profiles>
		<profile>
			<id>kubernetes</id>
			<build>
				<plugins>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>fabric8-maven-plugin</artifactId>
						<version>${fabric8.maven.plugin.version}</version>
						<executions>
							<execution>
								<id>fmp</id>
								<goals>
									<goal>resource</goal>
									<goal>build</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<enricher>
								<config>
									<fmp-controller>
										<name>spring-cloud-reload</name>
								    </fmp-controller>
									<fmp-service>
										<name>spring-cloud-reload</name>
										<type>NodePort</type>
									</fmp-service>
								</config>
							</enricher>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>release</id>
			<build>
				<plugins>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>fabric8-maven-plugin</artifactId>
						<version>${fabric8.maven.plugin.version}</version>
						<executions>
							<execution>
								<id>fmp</id>
								<goals>
									<goal>resource</goal>
									<goal>helm</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>integration</id>
			<build>
				<plugins>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>fabric8-maven-plugin</artifactId>
						<version>${fabric8.maven.plugin.version}</version>
						<executions>
							<execution>
								<id>fmp</id>
								<goals>
									<goal>resource</goal>
									<goal>helm</goal>
									<goal>build</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>${maven-failsafe-plugin.version}</version>
						<executions>
							<execution>
								<id>run-integration-tests</id>
								<phase>integration-test</phase>
								<goals>
									<goal>integration-test</goal>
									<goal>verify</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<skipTests>false</skipTests>
							<skipITs>false</skipITs>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>